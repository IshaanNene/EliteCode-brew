version: '3.8'

services:
  elitecode:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: elitecode_cli
    volumes:
      - ./problems:/home/elitecode/.elitecode/problems
      - ./cache:/home/elitecode/.elitecode/cache
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - ELITECODE_API_URL=http://backend:3000
      - ELITECODE_ENV=development
    depends_on:
      - backend
      - mongodb
    networks:
      - elitecode_network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: elitecode_backend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - MONGODB_URI=mongodb://mongodb:27017/elitecode
      - JWT_SECRET=your-jwt-secret-key
      - GITHUB_CLIENT_ID=your-github-client-id
      - GITHUB_CLIENT_SECRET=your-github-client-secret
    depends_on:
      - mongodb
    volumes:
      - ./backend:/app
      - /app/node_modules
    networks:
      - elitecode_network

  mongodb:
    image: mongo:7.0
    container_name: elitecode_mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./backend/docker/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
      - MONGO_INITDB_DATABASE=elitecode
    networks:
      - elitecode_network

  redis:
    image: redis:7.2-alpine
    container_name: elitecode_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    networks:
      - elitecode_network

  nginx:
    image: nginx:alpine
    container_name: elitecode_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - backend
    networks:
      - elitecode_network

volumes:
  mongodb_data:
  redis_data:
  problems:
  cache:

networks:
  elitecode_network:
    driver: bridge